@page
@using Open_MediaServer
@using Open_MediaServer.Database.Schema
@using Open_MediaServer.Utils
@using SQLiteNetExtensionsAsync.Extensions
@model Open_MediaServer.Frontend.Pages.Media

@{
    Layout = "_Layout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <title>@Program.ConfigManager.Config.FrontendName Media - Content</title>
    <link rel="stylesheet" href="~/Frontend/Assets/css/Content/Content.css">
    <link rel="stylesheet" href="~/Frontend/Assets/font/Font.css">
</head>
<body>
<div class="sort-navbar">
    <div class="sort-item">
        Name
    </div>
    <div class="sort-item">
        Author
    </div>
    <div class="sort-item">
        Date
    </div>
    <div class="sort-item">
        Downloads
    </div>
    <div class="sort-item">
        Type
    </div>
</div>
<div class="content-container">
    @{
        var mediaList = await Program.Database.MediaDatabase.GetAllWithChildrenAsync<DatabaseSchema.Media>();
        mediaList.RemoveAll(media => media.Public == false);
        if (mediaList.Count <= 0)
        {
            <div class="main-text">
                This server has no content associated with it.
            </div>
        }
        else
        {
            foreach (var media in mediaList)
            {
                var author = await Program.Database.UserDatabase.GetAsync<DatabaseSchema.User>(user => user.Id == media.AuthorId);
                if (media.ThumbnailPath != null)
                {
                    var img = await System.IO.File.ReadAllBytesAsync(media.ThumbnailPath);
                    var imgBase64 = Convert.ToBase64String(img);
                    <a class="content-item" href="/@media.Id/@media.Name@media.Extension">
                        <div>
                            <img src="data:image;base64,@imgBase64" alt="@media.Name" class="content-item-thumbnail">
                            <div class="content-item-text">
                                @media.Name.FirstCharToUpper()@media.Extension<br/>
                                @media.UploadDate.ToString("MM/dd/yy hh:mm")<br/>
                                @StringUtils.FormatBytesWithIdentifier(media.ContentSize)<br/>
                                @author.Username.FirstCharToUpper()<br/>
                            </div>
                        </div>
                    </a>
                }
                else
                {
                    <a class="content-item" href="/@media.Id/@media.Name@media.Extension">
                        <div>
                            <div class="content-item-no-thumbnail">
                                No thumbnail .-.
                            </div>
                            <div class="content-item-text">
                                @media.Name.FirstCharToUpper()@media.Extension<br/>
                                @media.UploadDate.ToString("MM/dd/yy hh:mm")<br/>
                                @StringUtils.FormatBytesWithIdentifier(media.ContentSize)<br/>
                                @author.Username.FirstCharToUpper()<br/>
                            </div>
                        </div>
                    </a>
                }
            }
        }
    }
</div>
</body>
</html>