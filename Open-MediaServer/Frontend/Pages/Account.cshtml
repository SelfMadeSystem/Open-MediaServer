@page
@using Open_MediaServer
@using Open_MediaServer.Backend.Schema
@using Open_MediaServer.Database.Schema
@using Open_MediaServer.Utils
@using SQLiteNetExtensionsAsync.Extensions
@model Open_MediaServer.Frontend.Pages.Account

@{
    Layout = "_Layout.cshtml";

    if (Request.Cookies["user_session"] == null || !UserUtils.IsAuthed(Request.Cookies["user_session"]))
    {
        Response.Redirect("/Login?returnUrl=Account");
        return;
    }

    var user = UserUtils.GetUser(Request.Cookies["user_session"]).Result;
}

<!DOCTYPE html>

<html>
<head>
    <title>@Program.ConfigManager.Config.FrontendName Media - Account</title>
    <link rel="stylesheet" href="~/Frontend/Assets/css/Account/Account.css">
    <link rel="stylesheet" href="~/Frontend/Assets/font/Font.css">
</head>
<body>
<div class="main-container">
    <div class="main-flex-item">
        <div class="profile-container">
            <div class="main-text">
                Account
                <hr class="hr-main"/>
            </div>

            @using (Html.BeginForm("PostUpdate", "UserApi", FormMethod.Get))
            {
                @Html.TextBox("Username", user.Username, new {@type = "hidden"})
                <div>
                    <div class="light-text container-desc-text">
                        Name
                    </div>
                    @Html.TextBox("Name", user.Username, new {@class = "profile-input", @placeholder = "Name"})
                </div>
                <div class="profile-input-containers">
                    <div class="light-text container-desc-text">
                        Bio
                    </div>
                    @Html.TextArea("Bio", user.Bio, new {@class = "profile-input", @placeholder = "Empty bio..."})
                </div>
                @Html.TextBox("returnURL", "/Account", new {@type = "hidden"})
                <input type="submit" class="profile-update-button" value="Update Profile"/>
            }
        </div>
    </div>
    <div class="main-flex-item">
        <div class="main-text media-main-text">
            Content
            <hr class="hr-main"/>
        </div>
        <div class="content-container">
            @{
                var mediaList = await Program.Database.MediaDatabase.GetAllWithChildrenAsync<DatabaseSchema.Media>();
                if (mediaList == null || mediaList.Count <= 0)
                {
                    <div class="main-text" style="width: 100%; text-align: center">
                        This account has no media associated with it.<br/>
                        Try uploading a video!
                    </div>
                }
                else
                {
                    foreach (var media in mediaList)
                    {
                        if (media.ThumbnailPath != null)
                        {
                            <div class="content-item">
                                <a class="content-href" href="/@media.Id/@media.Name@media.Extension">
                                    <img class="content-item-thumbnail" src="@Url.Action("GetThumbnail", "MediaApi", new {Id = media.Id, Name = media.Name}, Request.Scheme, Request.Host.ToUriComponent() + ":" + (Request.Scheme.Equals("https", StringComparison.OrdinalIgnoreCase) ? Program.ConfigManager.Config.BackendPorts.https : Program.ConfigManager.Config.BackendPorts.http))" alt="@media.Name"/>
                                    <div class="content-item-text">
                                        @media.Name@media.Extension<br/>
                                        @media.UploadDate.ToString("MM/dd/yy HH:mm")<br/>
                                        Size: @StringUtils.FormatBytesWithIdentifier(media.ContentSize)<br/>
                                        Public: @media.Public<br/>
                                    </div>
                                </a>
                            </div>
                        }
                        else
                        {
                            <div class="content-item">
                                <a class="content-href" href="/@media.Id/@media.Name@media.Extension">
                                    <div class="content-item-no-thumbnail">
                                        No Thumbnail
                                    </div>
                                    <div class="content-item-text">
                                        @media.Name@media.Extension<br/>
                                        @media.UploadDate.ToString("MM/dd/yy HH:mm")<br/>
                                        Size: @StringUtils.FormatBytesWithIdentifier(media.ContentSize)<br/>
                                        Public: @media.Public<br/>
                                    </div>
                                </a>
                            </div>
                        }
                    }
                }
            }
        </div>
    </div>
</div>
</body>
</html>