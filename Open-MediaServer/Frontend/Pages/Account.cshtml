@page
@using Open_MediaServer
@using Open_MediaServer.Database.Schema
@using Open_MediaServer.Utils
@using SQLiteNetExtensionsAsync.Extensions
@model Open_MediaServer.Frontend.Pages.Account

@{
    Layout = "_Layout.cshtml";

    if (Request.Cookies["user_session"] == null || !UserUtils.IsAuthed(Request.Cookies["user_session"]))
    {
        Response.Redirect("/Login?returnUrl=Account");
        return;
    }

    var user = UserUtils.GetUser(Request.Cookies["user_session"]).Result;
}

<!DOCTYPE html>

<html>
<head>
    <title>@Program.ConfigManager.Config.FrontendName Media - Account</title>
    <link rel="stylesheet" href="~/Frontend/Assets/css/Account/Account.css">
    <link rel="stylesheet" href="~/Frontend/Assets/font/Font.css">
</head>
<body>
<div class="main-container">
    <div class="main-flex-item">
        <div class="profile-container noselect">
            <div class="main-text">
                Account
                <hr class="hr-main"/>
            </div>

            <div>
                <div class="light-text container-desc-text">
                    Name
                </div>
                <input type="text" id="profileName" class="profile-input" value="@user.Username" placeholder="Name"/>
            </div>

            <div class="profile-input-containers">
                <div class="light-text container-desc-text">
                    Bio
                </div>
                <textarea id="profileBio" class="profile-input" placeholder="Empty bio...">@user.Bio</textarea>
            </div>
            
            <div class="light-text div-update-button">
                <button class="profile-update-button" onclick="console.log('Hello World!');">Update Profile</button>
                @* <input type="button" id="profileUpdate" class="profile-input" value="@user.Username" placeholder="Name"/> *@
            </div>
        </div>
    </div>
    <div class="main-flex-item noselect">
        <div class="main-text media-main-text">
            Content
            <hr class="hr-main"/>
        </div>
        <div class="media-container">
            @{
                var mediaList = await Program.Database.MediaDatabase.GetAllWithChildrenAsync<DatabaseSchema.Media>();
                if (mediaList == null || mediaList.Count <= 0)
                {
                    <div class="main-text" style="width: 100%; text-align: center">
                        This account has no media associated with it.<br/>
                        Try uploading a video!
                    </div>
                }
                else
                {
                    foreach (var media in mediaList)
                    {
                        if (media.ThumbnailPath != null)
                        {
                            var img = await System.IO.File.ReadAllBytesAsync(media.ThumbnailPath);
                            var imgBase64 = Convert.ToBase64String(img);
                            <a class="media-flex-item" href="/@media.Id/@media.Name@media.Extension">
                                <div class="media-element">
                                    <img src="data:image;base64,@imgBase64" alt="@media.Name" class="media-img-item">
                                    <div class="media-element-text">
                                        @media.Name@media.Extension<br/>
                                        @media.UploadDate.ToString("MM/dd/yy HH:mm")<br/>
                                        Public: @media.Public<br/>
                                        Size: @StringUtils.FormatBytesWithIdentifier(media.ContentSize)<br/>
                                        ID: @media.Id
                                    </div>
                                </div>
                            </a>
                        }
                        else
                        {
                            <a class="media-flex-item" href="/@media.Id/@media.Name@media.Extension">
                                <div class="media-element">
                                    <div class="media-no-img-item">
                                        No thumbnail .-.
                                    </div>
                                    <div class="media-element-text">
                                        @media.Name@media.Extension<br/>
                                        @media.UploadDate.ToString("MM/dd/yy HH:mm")<br/>
                                        Public: @media.Public<br/>
                                        Size: @StringUtils.FormatBytesWithIdentifier(media.ContentSize)<br/>
                                        ID: @media.Id
                                    </div>
                                </div>
                            </a>
                        }
                    }
                }
            }
        </div>
    </div>
</div>
</body>
</html>